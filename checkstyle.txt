Starting audit...
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:3:8: Unused import - com.fasterxml.jackson.annotation.JsonProperty. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:6:13: Using the '.*' form of import should be avoided - input.*. [AvoidStarImport]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:22:21: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:22:22: Parameter input should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:74:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'addResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'addResults' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:74:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:74:28: Parameter index should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:95:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:97:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:98:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:99:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:100:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:101:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:102:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:103:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:107:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:111:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:115:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:119:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:123:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:127:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'getResultsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'getResultsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:131:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:131:29: Parameter children should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:135:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:135:34: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:139:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:139:32: Parameter santaBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:143:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:143:35: Parameter santaGiftsList should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:147:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:147:34: Parameter annualChanges should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:151:5: Class 'Database' looks like designed for extension (can be subclassed), but the method 'setResultsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Database' final or making the method 'setResultsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\database\Database.java:151:32: Parameter resultsList should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:4:8: Unused import - com.fasterxml.jackson.annotation.JsonIgnoreProperties. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:24:17: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:24:18: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:24:30: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:24:47: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:25:17: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:25:30: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:25:43: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:26:17: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:40:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:42:29: '10.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:45:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:47:24: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:48:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:49:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:50:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:51:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:52:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:53:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:54:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:55:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:56:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:57:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:58:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:62:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:67:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:68:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:72:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:77:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:78:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:82:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:87:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:88:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:92:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:97:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:98:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:102:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:107:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:108:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:112:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:117:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:118:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:122:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:127:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:128:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:132:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:137:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:142:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:147:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:152:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:153:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:157:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:158:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:162:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:163:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:167:5: Class 'Baby' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Baby' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Baby.java:168:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:8:17: Parameter productName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:8:37: Parameter price should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:8:51: Parameter category should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:14:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:16:24: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:17:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:18:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:19:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:23:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:27:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:27:32: Parameter productName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:31:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:35:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:35:26: Parameter price should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:39:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:43:5: Class 'Gift' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Gift' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Gift.java:43:29: Parameter category should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:23:16: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:23:17: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:23:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:23:46: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:24:16: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:24:29: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:24:42: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:25:16: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:39:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:48:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:50:23: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:51:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:52:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:53:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:54:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:55:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:56:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:57:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:58:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:59:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:60:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:61:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:65:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:70:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:71:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:75:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:80:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:81:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:85:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:90:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:91:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:95:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:100:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:101:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:105:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:110:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:111:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:115:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:120:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:121:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:125:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:130:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:131:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:135:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:140:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:145:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:150:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:155:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:156:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:160:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:161:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:165:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:166:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:170:5: Class 'Kid' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Kid' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Kid.java:171:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:23:17: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:23:18: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:23:30: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:23:47: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:24:17: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:24:30: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:24:43: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:25:17: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:39:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:50:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:52:24: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:53:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:54:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:55:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:56:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:57:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:58:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:59:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:60:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:61:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:62:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:63:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:67:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:72:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:73:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:77:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:82:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:83:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:87:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:92:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:93:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:97:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:102:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:103:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:107:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:112:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:113:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:117:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:122:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:123:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:127:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:132:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:133:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:137:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:142:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:147:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:152:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:157:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:158:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:162:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:163:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:167:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:168:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:172:5: Class 'Teen' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Teen' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\Teen.java:173:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:23:23: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:23:24: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:23:36: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:23:53: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:24:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:24:37: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:24:50: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:25:24: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:39:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'calculateAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'calculateAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:44:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:46:30: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:47:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:48:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:49:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:50:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:51:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:52:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:53:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:54:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:55:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:56:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:57:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:61:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:66:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:67:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:71:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:76:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:77:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:81:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:86:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:87:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:91:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:96:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:97:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:101:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:106:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:107:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:111:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:116:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:117:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:121:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:126:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:127:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:131:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:136:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:141:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:146:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'getReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'getReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:151:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setAssignedBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setAssignedBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:152:35: Parameter assignedBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:156:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setAverageScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setAverageScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:157:33: Parameter averageScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:161:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setNiceScoreHistory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setNiceScoreHistory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:162:37: Parameter niceScoreHistory should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:166:5: Class 'YoungAdult' looks like designed for extension (can be subclassed), but the method 'setReceivedGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'YoungAdult' final or making the method 'setReceivedGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\entities\YoungAdult.java:167:34: Parameter receivedGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:11:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:12:38: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:12:50: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:12:67: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:13:38: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:13:51: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:13:64: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:14:38: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:15:19: '5' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:17:26: '12' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\factories\IChildFactory.java:19:27: '18' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:3:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:4:8: Unused import - interfaces.IChild. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:5:8: Unused import - updates.ChildUpdate. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:15:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:16:25: Parameter newGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:17:25: Parameter newChildren should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:18:25: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:27:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:31:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:31:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:35:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:39:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:39:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:43:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:47:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:47:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:51:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:55:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'setChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:55:36: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:59:5: Class 'AnnualChangesInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:61:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:62:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:63:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:64:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\AnnualChangesInputData.java:65:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:14:30: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:14:42: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:14:59: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:15:30: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:15:43: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:15:56: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:16:30: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:26:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:30:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:30:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:34:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:38:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setLastName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setLastName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:38:29: Parameter lastName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:42:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:46:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setFirstName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setFirstName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:46:30: Parameter firstName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:50:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:54:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setAge' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setAge' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:54:24: Parameter age should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:58:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:62:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setCity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setCity' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:62:25: Parameter city should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:66:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:70:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:70:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:74:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:78:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:78:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:82:5: Class 'ChildrenInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:84:37: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:85:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:86:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:87:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:88:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:89:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:90:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildrenInputData.java:91:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:3:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:12:33: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:12:34: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:12:46: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:13:34: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:19:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:23:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:23:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:27:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:31:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:31:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:35:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:39:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:39:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:43:5: Class 'ChildUpdateInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdateInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:45:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:46:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:47:44: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\ChildUpdateInputData.java:48:58: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:3:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:4:8: Unused import - interfaces.IChild. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:5:8: Unused import - updates.AnnualChange. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:7:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:25:18: Parameter numberOfYears should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:25:41: Parameter santaBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:26:18: Parameter children should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:27:18: Parameter santaGiftsList should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:28:18: Parameter annualChanges should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:36:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNumberOfYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNumberOfYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:40:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:44:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:48:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantaGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantaGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:52:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:56:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:58:25: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:59:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:60:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:61:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:62:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\Input.java:63:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:3:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:4:8: Unused import - interfaces.IChild. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:9:8: Unused import - updates.AnnualChange. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:20:24: Parameter inputPath should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:24:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'readData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'readData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:54: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\InputLoader.java:78: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:8:32: Parameter productName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:8:52: Parameter price should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:9:32: Parameter category should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:15:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:19:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'setProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'setProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:19:32: Parameter productName should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:23:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:27:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'setPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'setPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:27:26: Parameter price should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:31:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:35:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'setCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'setCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:35:29: Parameter category should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:39:5: Class 'SantaGiftsInputData' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SantaGiftsInputData' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:41:39: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:42:54: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:43:36: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\input\SantaGiftsInputData.java:44:50: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:5:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:10:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:14:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:18:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:22:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:24:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:26:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:30:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:32:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:34:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:36:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:38:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:40:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:42:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:46:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:48:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:50:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:52:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\interfaces\IChild.java:54:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\main\Main.java:25:29: '=' is not preceded with whitespace. [WhitespaceAround]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:1:9: Name 'simulationFlow' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:12:5: Class 'InitialRound' looks like designed for extension (can be subclassed), but the method 'executeInitialRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialRound' final or making the method 'executeInitialRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:12:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:12:37: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:13:59: '18' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:55:66: '1000000.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:55:75: ',' is not followed by whitespace. [WhitespaceAfter]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\InitialRound.java:56:35: '1000000.0' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:1:9: Name 'simulationFlow' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:15:5: Class 'StandardRound' looks like designed for extension (can be subclassed), but the method 'executeStandardRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'StandardRound' final or making the method 'executeStandardRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:15:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:15:38: Parameter database should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:15:57: Parameter update should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:31:59: '18' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:66:38: '18' is a magic number. [MagicNumber]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\simulationFlow\StandardRound.java:96: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:14:25: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:15:26: Parameter newGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:16:26: Parameter newChildren should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:17:26: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:24:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:26:32: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:27:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:28:42: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:29:48: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:30:56: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:34:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:38:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:38:35: Parameter newSantaBudget should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:42:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:46:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:46:29: Parameter newGifts should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:50:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:54:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:54:32: Parameter newChildren should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:58:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'getChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'getChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:62:5: Class 'AnnualChange' looks like designed for extension (can be subclassed), but the method 'setChildrenUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChange' final or making the method 'setChildrenUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\AnnualChange.java:62:36: Parameter childrenUpdates should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:3:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:12:24: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:12:25: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:12:37: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:12:55: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:18:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:22:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:22:23: Parameter id should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:26:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:30:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:30:30: Parameter niceScore should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:34:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:38:5: Class 'ChildUpdate' looks like designed for extension (can be subclassed), but the method 'setGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildUpdate' final or making the method 'setGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\updates\ChildUpdate.java:38:37: Parameter giftsPreferences should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:3:8: Unused import - entities.Gift. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:12:1: Class Utils should be declared as final. [FinalClass]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:16:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:28:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:44:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:65: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:65:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\utils\Utils.java:72: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\annualChildren.java:4:8: Unused import - interfaces.IChild. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\annualChildren.java:9:14: Name 'annualChildren' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\annualChildren.java:13:5: Class 'annualChildren' looks like designed for extension (can be subclassed), but the method 'getAnnualChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'annualChildren' final or making the method 'getAnnualChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\annualChildren.java:17:5: Class 'annualChildren' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'annualChildren' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\annualChildren.java:19:34: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\annualChildren.java:20:52: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\children.java:8:14: Name 'children' must match pattern '^[A-Z][a-zA-Z0-9]*$'. [TypeName]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\children.java:12:21: Parameter children should be final. [FinalParameters]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\children.java:16:5: Class 'children' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'children' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\children.java:18:28: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\children.java:19:40: '+' should be on a new line. [OperatorWrap]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\Writer.java:6:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\Writer.java:7:8: Unused import - org.json.simple.JSONObject. [UnusedImports]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\Writer.java:20:5: Class 'Writer' looks like designed for extension (can be subclassed), but the method 'writeFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Writer' final or making the method 'writeFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\Writer.java:20:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] D:\JavaProjects\oop-proiect1\.\src\writer\Writer.java:20:27: Parameter database should be final. [FinalParameters]
Audit done.
Checkstyle ends with 512 errors.
